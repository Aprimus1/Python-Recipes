import heapq

'''
Recipe for returning the item with the highest priority from queue...
If two items have the same priority value, FIFO....
'''

class PriorityQueue:
    def __init__(self):
        self.queue = []
        self.index = 0

    def push(self, item, priority):
        heapq.heappush(self.queue,(-priority,self.index, item))
        self.index += 1

    def pop(self):
        return heapq.heappop(self.queue)[-1]

class Item:
    def __init__(self, name):
        self.name = name

    def __repr__(self):
        return 'Item({!r})'.format(self.name)
        
        
q = PriorityQueue()
q.push(Item('foo'),1)
q.push(Item('bar'),5)
q.push(Item('spam'),4)
q.push(Item('grok'),1)
